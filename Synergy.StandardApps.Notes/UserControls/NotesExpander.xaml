<UserControl x:Class="Synergy.StandardApps.Notes.UserControls.NotesExpander"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Synergy.StandardApps.Notes.UserControls"
             x:Name="expander"
             mc:Ignorable="d" 
             Visibility="Collapsed"
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>

        <LinearGradientBrush x:Key="UnderLineStyle"
                             StartPoint="0,0.5"
                             EndPoint="1,0.5">
            <GradientStop Color="{StaticResource Primary3}" Offset="0"/>
            <GradientStop Color="{StaticResource Primary2}" Offset="0.5"/>
            <GradientStop Color="{StaticResource Primary}" Offset="1"/>
        </LinearGradientBrush>

        <SolidColorBrush x:Key="Expander.Static.Circle.Stroke" Color="{StaticResource Gray300}"/>
        <SolidColorBrush x:Key="Expander.Static.Circle.Fill" Color="{StaticResource Gray600}"/>
        <SolidColorBrush x:Key="Expander.Static.Arrow.Stroke" Color="{StaticResource Gray300}"/>

        <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="22"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Ellipse x:Name="circle" Margin="3 0 0 0" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="19" Stroke="{StaticResource Expander.Static.Circle.Stroke}" VerticalAlignment="Center" Width="19"/>
                                <Path x:Name="Arrow" Margin="3 0 0 0" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" SnapsToDevicePixels="false" StrokeThickness="2" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                                    <Path.RenderTransform>
                                        <RotateTransform Angle="0"/>
                                    </Path.RenderTransform>
                                </Path>
                                <ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                            </Trigger>

                            <!-- Animate arrow when toggled-->
                            <Trigger Property="IsChecked"
                                     Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="Arrow"
                                                             Storyboard.TargetProperty=
                                                               "(Path.RenderTransform).(RotateTransform.Angle)"
                                                             To="180"
                                                             Duration="0:0:0.3"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="Arrow"
                                                             Storyboard.TargetProperty=
                                                               "(Path.RenderTransform).(RotateTransform.Angle)"
                                                             To="0"
                                                             Duration="0:0:0.3"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ExpanderHeaderFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border>
                            <Rectangle Margin="0" StrokeDashArray="1 2" Stroke="Black" SnapsToDevicePixels="true" StrokeThickness="1"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="ExpanderTemplate"
                         TargetType="Expander">

            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" SnapsToDevicePixels="true">
                <DockPanel>
                    <Border x:Name="HeaderBrd" DockPanel.Dock="Top" Padding="0 1 0 1" CornerRadius="10 10 0 0" BorderBrush="{StaticResource UnderLineStyle}" BorderThickness="0 0 0 2" Background="Transparent">
                        <ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" FontStretch="{TemplateBinding FontStretch}" Foreground="{TemplateBinding Foreground}" FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" FontStyle="{TemplateBinding FontStyle}" FontFamily="{TemplateBinding FontFamily}" FontWeight="{TemplateBinding FontWeight}" FontSize="{TemplateBinding FontSize}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}" Style="{StaticResource ExpanderDownHeaderStyle}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                        <ContentPresenter.LayoutTransform>
                            <ScaleTransform ScaleY="0"/>
                        </ContentPresenter.LayoutTransform>
                    </ContentPresenter>
                </DockPanel>
            </Border>

            <ControlTemplate.Triggers>
                <Trigger Property="IsExpanded" Value="true">
                    <Setter Property="Margin" Value="0 0 0 10"/>
                    <Setter TargetName="HeaderBrd" Property="Margin" Value="0 0 0 3"/>

                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="ExpandSite"
                                                 Storyboard.TargetProperty=
                                                   "(ContentPresenter.LayoutTransform).(ScaleTransform.ScaleY)"
                                                 To="1"
                                                 Duration="0:0:0.3"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="ExpandSite"
                                                 Storyboard.TargetProperty=
                                                   "(ContentPresenter.LayoutTransform).(ScaleTransform.ScaleY)"
                                                 To="0"
                                                 Duration="0:0:0.3"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>

                </Trigger>
            </ControlTemplate.Triggers>

        </ControlTemplate>
        
        <Style x:Key="ExpanderStyle" TargetType="Expander">

            <Setter Property="ExpandDirection" Value="Down"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>

            <Setter Property="Template"
                    Value="{StaticResource ExpanderTemplate}"/>

        </Style>
        
    </UserControl.Resources>
    
    <Expander Style="{StaticResource ExpanderStyle}"
              IsExpanded="{Binding ElementName=expander, Path=IsExpanded}">

        <Expander.Header>
            <TextBlock
                Style="{StaticResource TextBlockStyle}"
                FontSize="18"
                Text="{Binding ElementName=expander, Path=Title}"/>
        </Expander.Header>

        <Grid x:Name="Items"/>

    </Expander>
    
</UserControl>
