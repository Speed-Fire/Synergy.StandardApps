<UserControl x:Class="Synergy.StandardApps.Alarms.UserControls.AlarmControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Synergy.StandardApps.Alarms"
             xmlns:controls="clr-namespace:Synergy.WPF.Common.Controls;assembly=Synergy.WPF.Common"
             xmlns:convs="clr-namespace:Synergy.WPF.Common.Converters;assembly=Synergy.WPF.Common"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:sys="clr-namespace:System;assembly=System.Runtime"
             mc:Ignorable="d" 
             d:DesignHeight="250" d:DesignWidth="800">

    <UserControl.Resources>

        <ResourceDictionary>

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Resources/Styles.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="MainBorderStyle"
               TargetType="Border">

                <Setter Property="CornerRadius" Value="10"/>
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="Background" Value="{StaticResource Gray600Brush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource PrimaryBrush}"/>
                <Setter Property="Padding" Value="5"/>

            </Style>

            <convs:LongStroryShortConverter x:Key="lssconv"/>
            <sys:Int32 x:Key="MaxPreviewLength">10</sys:Int32>
        </ResourceDictionary>

    </UserControl.Resources>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding ViewLoadedCommand}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="Unloaded">
            <i:InvokeCommandAction Command="{Binding ViewUnloadedCommand}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="MouseDown">
            <i:InvokeCommandAction Command="{Binding Path=DataContext.OpenAlarmEditCommand,
                        RelativeSource={RelativeSource AncestorType={x:Type local:AlarmsView}}}"
                                   CommandParameter="{Binding Id}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    
    <Border
        CornerRadius="15"
        BorderThickness="3"
        Padding="5 5 10 5"
        Background="{StaticResource Gray600Brush}">

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" MinWidth="125"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="125"/>
            </Grid.ColumnDefinitions>

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <TextBlock FontSize="25"
                           VerticalAlignment="Center"
                           Text="{Binding Time}">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock"
                               BasedOn="{StaticResource TextBlockStyle}">

                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=TitleTB, Path=Text}"
                                         Value="">
                                    <Setter Property="Grid.RowSpan" Value="2"/>
                                </DataTrigger>
                            </Style.Triggers>

                        </Style>
                    </TextBlock.Style>
                </TextBlock>

                <TextBlock x:Name="TitleTB"
                           Grid.Row="1"
                           Style="{StaticResource TextBlockStyle}"
                           Margin="5 0 0 0"
                           Text="{Binding Title, Converter={StaticResource lssconv},
                                ConverterParameter={StaticResource MaxPreviewLength}}"/>

            </Grid>

            <Grid Grid.Column="1"
                  HorizontalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <ToggleButton Grid.Column="0"
                              x:Name="MondayBtn"
                              IsEnabled="False"
                              Margin="5 0 10 0"
                              Style="{StaticResource ToggleButtonStyle.Colored}"
                              Content="{DynamicResource Strings.Monday.Short}"
                              IsChecked="{Binding Days[1].Value}"/>

                <ToggleButton Grid.Column="1"
                              x:Name="TuesdayBtn"
                              IsEnabled="False"
                              Margin="10 0 10 0"
                              Style="{StaticResource ToggleButtonStyle.Colored}"
                              Content="{DynamicResource Strings.Tuesday.Short}"
                              IsChecked="{Binding Days[2].Value}"/>

                <ToggleButton Grid.Column="2"
                              x:Name="WednesdayBtn"
                              IsEnabled="False"
                              Margin="10 0 10 0"
                              Style="{StaticResource ToggleButtonStyle.Colored}"
                              Content="{DynamicResource Strings.Wednesday.Short}"
                              IsChecked="{Binding Days[3].Value}"/>

                <ToggleButton Grid.Column="3"
                              x:Name="ThursdayBtn"
                              IsEnabled="False"
                              Margin="10 0 10 0"
                              Style="{StaticResource ToggleButtonStyle.Colored}"
                              Content="{DynamicResource Strings.Thursday.Short}"
                              IsChecked="{Binding Days[4].Value}"/>

                <ToggleButton Grid.Column="4"
                              x:Name="FridayBtn"
                              IsEnabled="False"
                              Margin="10 0 10 0"
                              Style="{StaticResource ToggleButtonStyle.Colored}"
                              Content="{DynamicResource Strings.Friday.Short}"
                              IsChecked="{Binding Days[5].Value}"/>

                <ToggleButton Grid.Column="5"
                              x:Name="SaturdayBtn"
                              IsEnabled="False"
                              Margin="10 0 10 0"
                              Style="{StaticResource ToggleButtonStyle.Colored}"
                              Content="{DynamicResource Strings.Saturday.Short}"
                              IsChecked="{Binding Days[6].Value}"/>

                <ToggleButton Grid.Column="6"
                              x:Name="SundayBtn"
                              IsEnabled="False"
                              Margin="10 0 5 0"
                              Style="{StaticResource ToggleButtonStyle.Colored}"
                              Content="{DynamicResource Strings.Sunday.Short}"
                              IsChecked="{Binding Days[0].Value}"/>

            </Grid>

            <Border Grid.ColumnSpan="3"
                    CornerRadius="15"
                    Margin="-5 -5 -10 -5"
                    Background="{StaticResource Gray950Brush}"
                    Opacity="0"
                    Panel.ZIndex="1">

                <Border.Style>
                    <Style TargetType="Border">
                        <Style.Triggers>

                            <DataTrigger Binding="{Binding ElementName=AlarmEnabilityBtn, Path=IsChecked}"
                                         Value="False">

                                <DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                             From="0"
                                                             To="0.7"
                                                             Duration="0:0:0.3"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>

                                <DataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                             From="0.7"
                                                             To="0"
                                                             Duration="0:0:0.3"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.ExitActions>
                                
                            </DataTrigger>
                            
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                
            </Border>

            <controls:SliderButton
                x:Name="AlarmEnabilityBtn"
                Grid.Column="2"
                Panel.ZIndex="2"
                Height="23"
                MinWidth="60"
                HorizontalAlignment="Right"
                Style="{StaticResource SliderButtonStyle}"
                IsChecked="{Binding IsAlarmEnabled}"
                MouseDown="SliderButton_PreviewMouseDown"/>

        </Grid>
        
        <!--#region MouseOver appearance -->
        
        <Border.BorderBrush>
            <SolidColorBrush x:Name="MainBrdBrush" Color="{StaticResource Primary}"/>
        </Border.BorderBrush>
        
        <Border.Triggers>

            <EventTrigger RoutedEvent="MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation 
                            Storyboard.TargetName="MainBrdBrush"
                            Storyboard.TargetProperty="Color"
                            From="{StaticResource Primary}"
                            To="LightBlue"
                            Duration="0:0:0.4"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>

            <EventTrigger RoutedEvent="MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation 
                            Storyboard.TargetName="MainBrdBrush"
                            Storyboard.TargetProperty="Color"
                            From="LightBlue"
                            To="{StaticResource Primary}"
                            Duration="0:0:0.4"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>

        </Border.Triggers>
        
        <!--#endregion-->
        
    </Border>
    
</UserControl>
